import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

BOT_TOKEN = "7547628532:AAEaThTghEpeqV87qYhMr8phGaTEkYkhxhM"
PAYMENT_PROVIDER_TOKEN = "381764678:TEST:MzY4ZDUzMzQ2NTQ5"

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()


# –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã
@dp.message(F.text == "/buy")
async def buy(message: types.Message):
    message.answer("Otvet")
    prices = [types.LabeledPrice(label="–¢–æ–≤–∞—Ä 1", amount=50000)]  # amount –≤ –∫–æ–ø–µ–π–∫–∞—Ö (500.00 ‚ÇΩ)

    await bot.send_invoice(
        chat_id=message.chat.id,
        title="–û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä–∞",
        description="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        provider_token=PAYMENT_PROVIDER_TOKEN,
        currency="rub",
        prices=prices,
        start_parameter="example-payment",
        payload="payload-test"
    )


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
@dp.pre_checkout_query(lambda query: True)
async def process_pre_checkout_query(pre_checkout_query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


# –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
@dp.message(F.content_type == "successful_payment")
async def process_successful_payment(message: types.Message):
    payment = message.successful_payment.to_python()
    await message.answer(f"‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\n–î–µ—Ç–∞–ª–∏:\n{payment}")


async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
